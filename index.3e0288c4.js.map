{"mappings":"AAAA,MAAMA,EAAO,CACTC,aAAcC,SAASC,cAAc,kBACrCC,aAAcF,SAASC,cAAc,kBACrCE,eAAgBH,SAASC,cAAc,yBACvCG,aAAcJ,SAASC,cAAc,uBACrCI,gBAAiBL,SAASC,cAAc,0BACxCK,cAAeN,SAASC,cAAc,wBACtCM,WAAYP,SAASQ,iBAAiB,yBAAyB,GAC/DC,SAAUT,SAASQ,iBAAiB,yBAAyB,IAGjE,IAAIE,EAAQ,GAmHZ,SAASC,IAGL,OAAOC,MAFK,qEAEMC,MAAMC,IACpB,IAAIA,EAASC,GACT,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,IACvBC,OAAM,SAAUC,GAEfC,QAAQC,IAAIF,E,IA3HpBtB,EAAKI,aAAaqB,iBAAiB,UAwDnC,SAAsBC,GACD,IAAIC,SAAS3B,EAAKI,cAE1BwB,SAAQ,CAACC,EAAOC,KACrBlB,EAAMkB,GAAOD,EAED,iBAARC,GAAoC,KAAVD,IAC1B7B,EAAKM,aAAayB,aAAa,YAAY,GAC3CR,QAAQC,IAAIM,EAAM,eAGV,eAARA,GAAkC,KAAVD,IACxB7B,EAAKK,eAAe0B,aAAa,YAAY,GAC7CR,QAAQC,IAAIM,EAAM,Y,OApE9B9B,EAAKI,aAAaqB,iBAAiB,UAKnC,SAA2BC,GACvBA,EAAMM,iBACNT,QAAQC,IAAIZ,GACZ,IACIqB,EAAMC,GADNC,aAAEA,EAAYC,cAAEA,EAAaC,WAAEA,EAAUC,YAAEA,GAAgB1B,EAG/DC,IACCE,MAAKwB,IACEhB,QAAQC,IAAIe,GAGZA,EAAKC,KAAIC,IACL,MAAMC,GAAEA,EAAEC,IAAEA,EAAGC,KAAEA,GAASH,EAEJ,QAAlBL,IACAH,EAAO,GAGPS,IAAON,IACPH,EAAOW,GAGPF,IAAOJ,IACPJ,EAAKU,EAAI,IAIrBrB,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GAERC,GAAgBC,GAAiBE,GACjCD,EAAaQ,OAAOV,GAAgBD,EACpCX,QAAQC,IAAIa,QACZrC,EAAKM,aAAauB,MAAQQ,IAK1BA,GACAF,EAAeE,EAAaS,WAC5B9C,EAAKK,eAAewB,MAAQM,SAFhC,KAOHd,OAAMC,IACHC,QAAQC,IAAIF,EAAM,G,IAlD1BtB,EAAKW,SAASc,iBAAiB,SAwE/B,WACIzB,EAAKM,aAAayC,gBAAgB,YAClC/C,EAAKK,eAAe0C,gBAAgB,W,IAIpClC,IACKE,MAAKwB,IAEF,IAAIS,EAAKC,EADT1B,QAAQC,IAAIe,GAGZ,MAAMW,EAAQX,EAAKC,KAAIC,IACH,QAAZA,EAAKC,IAA6B,cAAbD,EAAKE,MAC1BK,EAAMP,EAAKG,MAGC,QAAZH,EAAKC,IAA6B,SAAbD,EAAKE,MAC1BM,EAAMR,EAAKG,MAERH,KAGXlB,QAAQC,IAAI0B,GAEZ,MAAMC,EA6BlB,SAAuBH,EAAKC,GACxB,MAAO,8DACsBD,oGAGAC,0B,CAlCOG,CAAcJ,EAAKC,GAC/CjD,EAAKC,aAAaoD,mBAAmB,YAAaF,GAElD,MAAMG,EAAeJ,EAAMV,KAAIe,IAC3B,OAmCWC,EAnCcD,EAAKb,GAmCRe,EAnCYF,EAAKZ,IAoC5C,iBAAiBa,KAAaA,OAAeC,cADxD,IAA2BD,EAAWC,CAnCqB,IAC5CC,KAAK,IAER1D,EAAKQ,cAAc6C,mBAAmB,YAAaC,EAAa,IAEvEjC,OAAMC,IACHC,QAAQC,IAAIF,EAAM","sources":["src/scripts/app.js"],"sourcesContent":["const refs = {\n    currencyList: document.querySelector('.currency-list'),\n    currencyForm: document.querySelector('.currency-form'),\n    inputFromValue: document.querySelector('[name=\"fromQuantity\"]'),\n    inputToValue: document.querySelector('[name=\"toQuantity\"]'),\n    selectFromValue: document.querySelector('[name=\"fromNameMoney\"]'),\n    selectToValue: document.querySelector('[name=\"toNameMoney\"]'),\n    convertBtn: document.querySelectorAll('.currency-form button')[0],\n    resetBtn: document.querySelectorAll('.currency-form button')[1],\n}\n\nlet money = {}\n\nrefs.currencyForm.addEventListener('change', onInputValue)\nrefs.currencyForm.addEventListener('submit', onClickBtnConvert)\nrefs.resetBtn.addEventListener('click', onClickBtnReset)\n\ndrawCurrency()\n\nfunction onClickBtnConvert(event) {\n    event.preventDefault()\n    console.log(money)\n    let { fromQuantity, fromNameMoney, toQuantity, toNameMoney } = money\n    let from, to\n\n    fetchCurrency()\n    .then(data => {\n            console.log(data)\n            \n\n            data.map(name => {\n                const { cc, txt, rate } = name\n\n                if (fromNameMoney === 'UAH') {\n                    from = 1\n                } \n                \n                if (cc === fromNameMoney) {\n                    from = rate\n                }    \n                \n                if (cc === toNameMoney) {\n                    to = rate\n                }   \n            })\n        \n        console.log(from)\n        console.log(to)\n\n        if (fromQuantity && fromNameMoney && toNameMoney) {\n            toQuantity = Number(fromQuantity) / to\n            console.log(toQuantity)\n            refs.inputToValue.value = toQuantity\n            // refs.inputToValue.removeAttribute('disabled')\n            return\n        }\n\n        if (toQuantity) {\n            fromQuantity = toQuantity * index\n            refs.inputFromValue.value = fromQuantity\n            // refs.inputFromValue.removeAttribute('disabled')\n            return\n        }\n        })\n    .catch(error => {\n        console.log(error)\n    })\n}\n\nfunction onInputValue(event) {\n    const formData = new FormData(refs.currencyForm)\n\n    formData.forEach((value, key) => {\n        money[key] = value\n\n        if (key === 'fromQuantity' && value !== '') {\n            refs.inputToValue.setAttribute('disabled', true)\n            console.log(key + 'iside from')\n        }\n\n        if (key === 'toQuantity' && value !== '') {\n            refs.inputFromValue.setAttribute('disabled', true)\n            console.log(key + 'iside to')\n        }\n    })\n}\n\nfunction onClickBtnReset() {\n    refs.inputToValue.removeAttribute('disabled')\n    refs.inputFromValue.removeAttribute('disabled')\n}\n\nfunction drawCurrency() {\n    fetchCurrency()\n        .then(data => {\n            console.log(data)\n            let USD, EUR\n\n            const money = data.map(name => {\n                if (name.cc === 'USD' && name.txt === 'Долар США') {\n                    USD = name.rate\n                }\n\n                if (name.cc === 'EUR' && name.txt === 'Євро') {\n                    EUR = name.rate\n                }        \n                return name\n            })\n\n            console.log(money)\n\n            const markupCurrencyToday = currencyToday(USD, EUR)\n            refs.currencyList.insertAdjacentHTML('beforeend', markupCurrencyToday)\n\n            const markupSelect = money.map(item => {\n                return addOptionToSelect(item.cc, item.txt)\n            }).join('')\n\n            refs.selectToValue.insertAdjacentHTML('beforeend', markupSelect)\n        })\n    .catch(error => {\n        console.log(error)\n    })\n}\n\n\nfunction fetchCurrency() {\n    const URL = 'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json'\n\n    return fetch(URL).then((response) =>{\n        if(!response.ok){\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).catch(function (error) {\n        // Notify.failure('Oops, there is no country with that name');\n        console.log(error);\n    });\n}\n\nfunction currencyToday(USD, EUR) {\n    return `<li class=\"currency-item\">\n                <b>1 USD = </b>${USD} UAH\n            </li>\n            <li class=\"currency-item\">\n                <b>1 EUR = </b>${EUR} UAH\n            </li>`\n}\n\n\nfunction addOptionToSelect(nameMoney, desc) {\n    return `<option value=${nameMoney}>${nameMoney} - ${desc}</option> `\n}"],"names":["$c4e35ae0e9947bd2$var$refs","currencyList","document","querySelector","currencyForm","inputFromValue","inputToValue","selectFromValue","selectToValue","convertBtn","querySelectorAll","resetBtn","$c4e35ae0e9947bd2$var$money","$c4e35ae0e9947bd2$var$fetchCurrency","fetch","then","response","ok","Error","status","json","catch","error","console","log","addEventListener","event","FormData","forEach","value","key","setAttribute","preventDefault","from","to","fromQuantity","fromNameMoney","toQuantity","toNameMoney","data","map","name","cc","txt","rate","Number","index","removeAttribute","USD","EUR","money","markupCurrencyToday","$c4e35ae0e9947bd2$var$currencyToday","insertAdjacentHTML","markupSelect","item","nameMoney","desc","join"],"version":3,"file":"index.3e0288c4.js.map"}